class SnakeGame {

    field Snake s;
    field int appleX, appleY;

    static int UP, DOWN, LEFT, RIGHT;

    constructor SnakeGame new(){
        let s = Snake.new(4,4,3);
        return this;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
   	}

    method void run() {

        var int direction, headX, headY;
        var char key;  // the key currently pressed by the user
        var boolean exit, gameOver;
        let exit = false;
        let gameOver = false;

        do SnakeGame.printInstructions();
        do plantApple();
        do drawApple();
      
        while (~exit) {
            let key = Keyboard.keyPressed();
            let direction = -1;
            if (key = 81)  { let exit = true; }     // q key
            if (key = 131) { let direction = UP; }   // up arrow
            if (key = 133) { let direction = DOWN; }   // down arrow
            if (key = 130) { let direction = LEFT; }   // left arrow
            if (key = 132) { let direction = RIGHT; }   // right arrow
            if (~(direction = -1)) { do s.turn(direction); }
            
            do drawApple();
            do s.move();
            let headX = s.getHeadX();
            let headY = s.getHeadY();

            if (s.isEatingSelf()){
                let gameOver = true;
            }

            if (gameOver) {
                do SnakeGame.printLost();
                while (gameOver) {
                    let key = Keyboard.keyPressed();
                    if (key = 81)  {
                        let exit = true;
                        let gameOver = false;
                    }     // q key

                    if (key = 82)  {
                        let gameOver = false;
                        do clearApple();
                        do s.clear();
                        let s = Snake.new(4,4,3);
                        do plantApple();
                        do SnakeGame.unprintLost();
                    }     // r key
                }
            }

            if ((headX = appleX) & (headY = appleY)) {
                do s.incrementLength();
                do plantApple();
            }

            do Sys.wait(200);
        } // while
        return;
    }


    /** Plants an apple in a random position on the board */
    method void plantApple() {
        let appleX = Random.randRange(SnakeBoard.getWidth() - 1);
        let appleY = Random.randRange(SnakeBoard.getHeight() - 1);
        return;
    }

    method void drawApple() {
        do drawOrClearApple(true);
        return;
    }

    method void clearApple() {
        do drawOrClearApple(false);
        return;
    }

    method void drawOrClearApple(boolean color) {
        var int left, top;
        do Screen.setColor(color);
		let left = SnakeBoard.getLeft() + ((appleX * 16) + 3);
		let top = SnakeBoard.getTop() + ((appleY * 16) + 3);
        do Screen.drawRectangle(left, top, left + 10, top + 10);
        return;
    }


    function void init () {
        let UP = 0;
        let DOWN = 1;
        let LEFT = 2;
        let RIGHT = 3;
        return;
    }

    function void printInstructions() {
        do Output.println();
        do Output.printString("Welcome to our");
        do Output.println();
        do Output.printString("  Snake game!");
        do Output.println();
        do Output.println();
        do Output.println();
        do Output.printString("  Control the");
        do Output.println();
        do Output.printString("snake with the");
        do Output.println();
        do Output.printString("  arrow keys");
        do Output.println();
        do Output.println();
        do Output.println();
        do Output.printString("Press q to exit");
        do Output.println();
        do Output.println();
        do Output.println();
        do Output.printString("  Good luck!");
        return;
    }

    function void printLost() {
        do Output.moveCursor(15,0);
        do Output.printString("  Game over :(");
        do Output.moveCursor(16,0);
        do Output.printString("  Press r to");
        do Output.println();
        do Output.printString("    restart");
        return;
    }

    function void unprintLost() {
        do Output.moveCursor(15,0);
        do Output.printString("              ");
        do Output.moveCursor(16,0);
        do Output.printString("            ");
        do Output.println();
        do Output.printString("           ");
        return;
    }
}
